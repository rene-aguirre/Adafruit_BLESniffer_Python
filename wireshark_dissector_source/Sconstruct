# Copyright (c) 2010-2012 The Board of Trustees of The Leland Stanford Junior University
# Copyright (c) 2012-2013 Barnstormer Softworks

import os
import os.path
import platform
import zipfile
import tarfile
import sys
import subprocess

env = Environment()

# You can set use_brew=1 at the command line and we'll try to figure out
# how brew installed your wireshark and do all the heavy lifting for you
use_brew = bool(int(ARGUMENTS.get('use_brew', 0)))

PLAT_LIBS = []
INSTALLPATH = ""

def get_version ():
  v = "Unknown"
  return v
  ver_hpp = os.path.normpath("%s/moduleinfo.h" % os.getcwd())
  f = open(ver_hpp, "rb")
  for line in f:
    if line.startswith("#define VERSION"):
      v = line.split()[2].strip('"')

  return v

def brew_setup ():
  cdir = os.getcwd()
  formula = subprocess.check_output("brew cat wireshark", shell=True)
  for line in formula.split("\n"):
    if line.strip().startswith("url"):
      # Don't look now, heinous things happen to strings in here
      if "'" in line:
        url = line[line.index("'")+1:-1]
      else:
        url = line[line.index('"')+1:-1]
      break
  os.chdir("/tmp/")
  subprocess.call("wget %s" % (url), shell=True)
  # MacOS X tar recognizes compressed input without help
  subprocess.call("tar -xf %s" % (url.split("/")[-1]), shell=True)
  os.chdir(url.split("/")[-1][:-8])
  subprocess.call("PKG_CONFIG_PATH=/opt/X11/lib/pkgconfig/:/usr/local/lib/pkgconfig/ ./configure", shell=True)
  os.environ["WIRESHARK"] = os.getcwd()
  os.chdir(cdir)
  
def error (msg):
  print "### ERROR: %s" % (msg)

if os.name == 'posix':
  if os.uname()[0] == "Darwin":
    PLAT_LIBS.append('wireshark')
    env.Replace(SHLIBSUFFIX = ".so")
    env.Replace(LINKFLAGS = "-flat_namespace")
    if use_brew:
      brew_setup()

  if not os.environ.has_key("WIRESHARK"):
    error("You need to set the WIRESHARK environment variable to the location of your wireshark include directory.")
    error("(such that epan/packet.h is a valid include path)")
    sys.exit()
  env.AppendUnique(
    CPPPATH = [os.getcwd(),
               os.environ['WIRESHARK']],
    LIBPATH = ['/usr/lib',
               '/usr/local/lib'])

  INSTALLPATH = os.path.expanduser('~/.wireshark/plugins/')

  env.ParseConfig('pkg-config --cflags --libs glib-2.0')

  env['SHLIBPREFIX'] = ""
  env['PKG_NAME'] = "plugin-%s-%s-%s" % (get_version(), os.uname()[0].lower(), platform.architecture()[0])

  def package_posix(target, source, env):
    src = source[0].path
    tpath = "%s.tgz" % (target[0].path)
    t = tarfile.open(tpath, "w:gz")
    t.add(src)
    t.close()

  bld_pkg = Builder(action=package_posix, src_suffix='.so')
  env.AppendUnique(BUILDERS = {"Package" : bld_pkg})


src_files_all = Split("""
  packet-btle.c
  packet-nordic.c
  """)

NORDIC = 1
if not NORDIC:
    src_files = ['packet-btle.c',]
else:
    src_files = ['packet-nordic_ble.c',]

objects = []

env.Append(CPPDEFINES=['HAVE_STDARG_H'])
env.Append(CPPDEFINES={'WS_MSVC_NORETURN' : '/**/',})

if not NORDIC:
    target_plugin = env.SharedLibrary('packet-btle', source = [src_files, objects], LIBS=PLAT_LIBS)
else:
    target_plugin = env.SharedLibrary('packet-nordic_ble', source = [src_files, objects], LIBS=PLAT_LIBS)

target_package = env.Package(env['PKG_NAME'], source = target_plugin)
env.Alias('package', target_package)

target_install = env.Install(INSTALLPATH, target_plugin)
env.Alias('install', target_install)

Default(target_plugin)

